esempio: X vale 1, se N = 3 vince X, if (m[i][k] == 1) N++
	 O vale -1, se N = -3 vince O, if (m[i][k] == -1) N--;

IMPORTANTE: RESETTARE N SE IL CONTROLLO NON RESTITUISCE VINCITORI E ALLA FINE DI OGNI CONTROLLO ROW/COLUMN/DIAGONAL
RESETTARE MATRICE OGNI VOLTA CHE FINISCE UN GAME (ricrearla?)



for (int i = 0; i<3; i++)
{ 
	// i = row, k = column
	Controllo(i);
}

private void Controllo(int i)	// da void a int se si fa if (Controllo(i) == 1) //player 1 has won!!
{

	int row = rowCheck(i);
	int column = columnCheck(i);
	int diagonal1 = diagonalCheck1();
	int diagonal2 = diagonalCheck2();

	if (row == 1) // player1 has won!!
	if (row == 2) // player2 has won!!
	if (columnCheck(i) == 1) // player1 has won!!
	if (columnCheck(i) == 2) // player2 has won!!
	if (diagonalCheck1() == 1) // player1 has won!!
	if (diagonalCheck1() == 2) // player2 has won!!
	if (diagonalCheck2() == 1) // player1 has won!!
	if (diagonalCheck2() == 2) // player2 has won!!
}


private int rowCheck(int i)
{
	int N = 0;
	for(int k = 0; k<3; k++)
	{
		if (m[i][k] == 1) N++;
		if (m[i][k] == -1) N--;
	}
	if (N == 3) return 1
	else if (N == -3) return 2
	else return 0; // 0 = nessuno ha vinto
}

private int columnCheck(int i)
{
	int N = 0;
	for(int k = 0; k<3; k++)
	{
		if (m[k][i] == 1) N++;
		if (m[k][i] == -1) N--;
	}
	if (N == 3) return 1
	else if (N == -3) return 2
	else return 0; // 0 = nessuno ha vinto
}

private int diagonalCheck1()
{
	int N = 0;
	for(int k = 0; k<3; k++)
	{
		if (m[k][k] == 1) N++;
		if (m[k][k] == -1) N--;
	}
	
	if (N == 3) return 1
	else if (N == -3) return 2
	else return 0; // 0 = nessuno ha vinto
}

private int diagonalCheck2()
{
	int N = 0;
	int i = 2;
	for(int k = 0; k<3; k++)
	{
		if (m[k][i] == 1) N++;
		if (m[k][i] == -1) N--;
		i--;
	}

	if (N == 3) return 1
	else if (N == -3) return 2
	else return 0; // 0 = nessuno ha vinto
}
